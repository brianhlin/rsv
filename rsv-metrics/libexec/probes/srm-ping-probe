#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long;

print "RSV BRIEF RESULTS:\n";

my $OPT_HOSTNAME;
my $OPT_METRIC;
my $OPT_SRM_WEBSERVICE_PATH;
my $OPT_SRM_PROTOCOL_VERSION = 2;

GetOptions("u=s"                  => \$OPT_HOSTNAME,
           "m=s"                  => \$OPT_METRIC,
           "srm-webservice-path"  => \$OPT_SRM_WEBSERVICE_PATH,
           "srm-protocol-version" => \$OPT_SRM_PROTOCOL_VERSION,
           "help|usage"           => \&usage);

if(not $OPT_HOSTNAME) {
    print "CRITICAL\n";
    print "No hostname was supplied to $0\n";
    exit 1; # Probe was invoked wrong, so give an error on exit status
}

my $srm_ping = which("srm-ping");
if(not $srm_ping) {
    print "CRITICAL\n";
    print "srm-ping is not in PATH\n";
    dump_debug();
    exit 0;
}

# TODO - might need '-x509_user_proxy=' included in here
my $srm_ping_cmd = "srm-ping -retry_num=0 -debug -$OPT_SRM_PROTOCOL_VERSION srm://$OPT_HOSTNAME -webservice_path=$OPT_SRM_WEBSERVICE_PATH";
my $out = `$srm_ping_cmd`;
my $ret = $? >> 8;

if($ret == 0) {
    print "OK\n";
    print "SRM server running at $OPT_HOSTNAME is alive and responding to the srm-ping command.\n";
    print "Output from srm-ping:\n$out\n";
    exit 0;
}
elsif ($ret == 1) {
    print "CRITICAL\n";
    print "SRM server running at $OPT_HOSTNAME is not responding to the srm-ping command.\n";
    print "Output from srm-ping:\n$out\n";
    exit 0;
}
else {  ## Unknown status here
    print "CRITICAL\n";
    print "The command '$srm_ping_cmd' returned an unknown exit code.\n";
    print "Output from srm-ping:\n$out\n";
    exit 0;
}

exit 0;


sub usage {
    print STDERR "Usage: $0\n";
    print STDERR "\t-u <hostname>\n";
    print STDERR "\t-m <metric>\n";
    exit 1;
}

sub dump_debug {
    print STDERR `/usr/bin/env`;
    return;
}
